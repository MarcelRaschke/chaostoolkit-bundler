name: Build and Tag

on:
  push:
    branches:
      - master
  workflow_dispatch:


jobs:
  tag-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ssh-key: "${{secrets.CI_SSH_KEY}}"
          fetch-depth: '0'
          persist-credentials: true
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: "3.8"
      - name: Prepare Release
        env:
          GH_EMAIL: ${{ secrets.GH_EMAIL }}
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
        run: |
          git config --global user.email "${GH_EMAIL}"
          git config --global user.name "${GH_USERNAME}"

          echo "Creating a new tag if needed"

          # moving to the latest tag (if one found)
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [[ $? == 0 ]]; then
              git checkout $latest_tag
          fi
          echo "Latest tag was: ${latest_tag}"

          pdm update --update-eager

          # today's version (suffixed if more than one per-day)
          # potential race condition here when multiple concurrent builds
          # let's assume it won't happen very often and we can fix it manually
          # Simplicity...
          export CAL_VERSION=`python3 get-next-version.py`

          # echo "Pushing the new version and set of dependencies"
          echo ${CAL_VERSION} > VERSION

          git status
          git add VERSION
          git add pdm.lock
          git commit -s -m "Prepare ${CAL_VERSION}"

          echo "Tagging release"
          git tag -a ${CAL_VERSION} -m "$(printf "Release ${CAL_VERSION}\n\n")"
          git push --follow-tags origin "${CAL_VERSION}"

          echo "Tag ${CAL_VERSION} pushed"
